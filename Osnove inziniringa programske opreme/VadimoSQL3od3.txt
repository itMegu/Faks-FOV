-- Task 1: Priimki delavcev, ki so zaposleni na istem delovnem mestu kot Ahlin
SELECT 
    PRIIMEK
FROM V_DELAVCI
WHERE DEL_MESTO = (SELECT DEL_MESTO FROM V_DELAVCI WHERE PRIIMEK = 'AHLIN');

-- Task 2: Izdelki z višjo standardno ceno od povprečne, urejeni po padajoči standardni ceni
SELECT 
    IZDELEK_ID, 
    STANDARDNA_CENA
FROM V_CENE
WHERE STANDARDNA_CENA > (SELECT AVG(STANDARDNA_CENA) FROM V_CENE)
ORDER BY STANDARDNA_CENA DESC;

-- Task 3: Zaposleni v oddelkih, katerih ime se konča na 'JA'
SELECT 
    D.EMSO, 
    D.PRIIMEK
FROM V_DELAVCI D
JOIN V_ODDELKI O ON D.ST_ODDELKA = O.STEVILKA
WHERE O.IME LIKE '%JA';

-- Task 4: EMŠO in priimek delavca, ki je zastopnik kupca z nazivom, ki vsebuje 'SPORT'
SELECT 
    D.EMSO, 
    D.PRIIMEK
FROM V_DELAVCI D
JOIN V_KUPCI K ON D.EMSO = K.PREDSTAVNIK
WHERE K.NAZIV LIKE '%SPORT%';

-- Task 5: Priimek in plača zaposlenih, ki poročajo Koncu
SELECT 
    D.PRIIMEK, 
    D.PLACA
FROM V_DELAVCI D
WHERE D.NADREJENI = (SELECT EMSO FROM V_DELAVCI WHERE PRIIMEK = 'KONC');

-- Task 6: Številka oddelka, priimek in delovno mesto zaposlenih v računovodstvu
SELECT 
    D.ST_ODDELKA, 
    D.PRIIMEK, 
    D.DEL_MESTO
FROM V_DELAVCI D
JOIN V_ODDELKI O ON D.ST_ODDELKA = O.STEVILKA
WHERE O.IME = 'RACUNOVODSTVO';

-- Task 7: Izdelki, ki še niso bili prodani
SELECT 
    I.IZDELEK_ID, 
    I.NAZIV
FROM V_IZDELKI I
WHERE I.IZDELEK_ID NOT IN (SELECT DISTINCT IZDELEK_ID FROM V_VRSTICE_NAROCIL);

-- Task 8: Naročila iz februarja 2011 z višjo vrednostjo od naročil iz januarja 2011
SELECT 
    N.NAROCILO_ID, 
    N.SKUPAJ
FROM V_NAROCILA N
WHERE EXTRACT(MONTH FROM N.DATUM_ODPREME) = 2 AND EXTRACT(YEAR FROM N.DATUM_ODPREME) = 2011
AND N.SKUPAJ > (SELECT MAX(SKUPAJ) FROM V_NAROCILA WHERE EXTRACT(MONTH FROM DATUM_ODPREME) = 1 AND EXTRACT(YEAR FROM DATUM_ODPREME) = 2011);

-- Task 9: Izdelki, ki se nadpovprečno dobro prodajajo
SELECT 
    I.NAZIV
FROM V_IZDELKI I
JOIN V_VRSTICE_NAROCIL VN ON I.IZDELEK_ID = VN.IZDELEK_ID
GROUP BY I.NAZIV
HAVING AVG(VN.KOLICINA) > (SELECT AVG(KOLICINA) FROM V_VRSTICE_NAROCIL);